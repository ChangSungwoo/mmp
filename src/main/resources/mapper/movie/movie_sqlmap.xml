<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="movie">
	
	<resultMap type="com.mymovieprice.mmp.movie.model.MovieMaster" id="MovieMaster">
		<result column="MOVIE_ID"	property="movieId"/>
		<result column="MOVIE_KOR_TITLE"	property="movieKorTitle"/>
		<result column="MOVIE_ENG_TITLE"	property="movieEngTitle"/>
		<result column="RELEASE_DT"	property="releaseDt"/>
		<result column="DISPLAY_YN"	property="displayYn"/>
		<result column="END_YN"	property="endYn"/>
		<result column="STD_PRICE_DIV"	property="stdPriceDiv"/>
		<result column="STD_PRICE"	property="stdPrice"/>
		<result column="ACTOR_TEXT"	property="actorText"/>
		<result column="DIRECTOR_TEXT"	property="directorText"/>
		<result column="CRE_DT"	property="creDt"/>
		<result column="CRE_ID"	property="creId"/>
		<result column="UPD_DT"	property="updDt"/>
		<result column="UPD_ID"	property="updId"/>
	</resultMap>
	
	<resultMap type="com.mymovieprice.mmp.movie.model.MoviePrice" id="MoviePriceList">
		<result column="MOVIE_PRICE_SEQ"	property="moviePriceSeq"/>
		<result column="PRICE_COMMENT"	property="priceComment"/>
		<result column="PRICE"	property="price"/>
		
	</resultMap>
	
	<select id="selectMovieMaster" parameterType="hashmap" resultMap="MovieMaster">
		select 
		MOVIE_ID as movieId,
		MOVIE_KOR_TITLE as movieKorTitle,
		MOVIE_ENG_TITLE as movieEngTitle,
		RELEASE_DT as releaseDt,
		DISPLAY_YN as displayYn,
		END_YN as endYn,
		STD_PRICE_DIV as stdPriceDiv, 
		(select CODE_D_NM from CMM_CODE_D where CODE_D_SEQ = STD_PRICE_DIV) as stdPrice,
		ACTOR_TEXT as actorText,
		DIRECTOR_TEXT as directorText, 
		CRE_DT as creDt,
		CRE_ID as creId,
		UPD_DT as updDt,
		UPD_ID as updId
		from MOVIE_MASTER
		where MOVIE_ID = #{movieId}
	</select>

	<select id="selectMovieMasterList" parameterType="hashmap" resultType="hashmap">
		select 
		MOVIE_ID as movieId,
		MOVIE_KOR_TITLE as movieKorTitle,
		MOVIE_ENG_TITLE as movieEngTitle,
		RELEASE_DT as releaseDt,
		DISPLAY_YN as displayYn,
		END_YN as endYn,
		CRE_DT as creDt,
		CRE_ID as creId,
		UPD_DT as updDt,
		UPD_ID as updId
		from MOVIE_MASTER
		order by CRE_DT DESC;
	</select>
	
	<insert id="insertMovieMaster" parameterType="com.mymovieprice.mmp.movie.model.MovieMaster">
		insert into MOVIE_MASTER(
			MOVIE_KOR_TITLE, 
			MOVIE_ENG_TITLE,
			RELEASE_DT,
			END_YN,
			DISPLAY_YN,
			STD_PRICE_DIV,
			DIRECTOR_TEXT,
			ACTOR_TEXT,
			CRE_ID,
			CRE_DT, 
			UPD_ID
			) VALUES (
			#{movieKorTitle},
			#{movieEngTitle},
			#{releaseDt},
			#{endYn},
			#{displayYn},
			(select CODE_D_SEQ 
				from CMM_CODE_D
				where CODE_M_SEQ = 1
				and DEFAULT_YN = 'Y'
				and USE_YN = 'Y'),
			#{directorText},
			#{actorText},
			#{creId},
			NOW(),
			#{updId}
			);
	</insert>
	
	<update id="updateMovieMaster" parameterType="com.mymovieprice.mmp.movie.model.MovieMaster">
		update MOVIE_MASTER
		set MOVIE_KOR_TITLE = #{movieKorTitle},
		MOVIE_ENG_TITLE = #{movieEngTitle},
		RELEASE_DT = #{releaseDt},
		END_YN = #{endYn},
		DISPLAY_YN = #{displayYn},
		STD_PRICE_DIV = #{stdPriceDiv},
		DIRECTOR_TEXT = #{directorText},
		ACTOR_TEXT = #{actorText},
		CRE_DT = #{creDt}
		where MOVIE_ID = #{movieId}
		;
	</update>

	<select id="selectOneMovieImageList" parameterType="hashmap" resultType="hashmap">
			select 
			MOVIE_ID as movieId,
			IMAGE_SEQ as imageSeq,
			IMAGE_DIV as imageDiv,
			FILE_PATH as filePath,
			FILE_NM as fileNm,
			IMAGE_DESC as imageDesc,
			USE_YN as useYn,
			DELEGATE_YN delegateYn,
			CRE_DT as creDt,
			CRE_ID  as creId,
			UPD_DT as updDt,
			UPD_ID as updId 
			from MOVIE_IMAGE
			where MOVIE_ID = #{movieId}
			;
	</select>
	
	<select id="selectMovieImage" parameterType="hashmap" resultType="hashmap">
			SELECT 
				mm.MOVIE_ID as movieId, 
				mm.MOVIE_KOR_TITLE as movieKorTitle, 
				mi.FILE_PATH as filePath,
				mi.FILE_NM as fileNm,
				(SELECT count(*) FROM MOVIE_IMAGE smi WHERE smi.MOVIE_ID = mm.MOVIE_ID) as imageCnt
			FROM MOVIE_MASTER mm LEFT OUTER JOIN MOVIE_IMAGE mi
			ON mm.MOVIE_ID = mi.MOVIE_ID 
			AND mi.DELEGATE_YN = 'Y'
			ORDER BY mm.CRE_DT DESC;
	</select>
	
	<insert id="insertMovieImage" parameterType="com.mymovieprice.mmp.movie.model.MovieImage">
		insert into MOVIE_IMAGE(
			MOVIE_ID, 
			IMAGE_DIV,
			FILE_NM,
			FILE_PATH,
			IMAGE_DESC,
			USE_YN,
			DELEGATE_YN,
			CRE_ID,
			CRE_DT, 
			UPD_ID
			) VALUES (
			#{movieId},
			#{imageDiv},
			#{fileNm},
			#{filePath},
			#{imageDesc},
			#{useYn},
			#{delegateYn},
			#{creId},
			NOW(),
			#{updId}
			);
	</insert>
	
	<update id="updateMovieImage" parameterType="com.mymovieprice.mmp.movie.model.MovieImage">
		update MOVIE_IMAGE
		SET USE_YN = #{useYn}
		, DELEGATE_YN = #{delegateYn}
		, IMAGE_DESC = #{imageDesc}
		, UPD_ID = #{updId}
		where MOVIE_ID = #{movieId}
		and IMAGE_SEQ = #{imageSeq};
	</update>
	
	<update id="delegateImgDisable" parameterType="com.mymovieprice.mmp.movie.model.MovieImage">
		update MOVIE_IMAGE
		SET DELEGATE_YN = 'N'
		, UPD_ID = #{updId}
		where MOVIE_ID = #{movieId};
	</update>
	
	<select id="selectMoviePriceList" parameterType="hashmap" resultType="hashmap">
		select
		B.MOVIE_ID as movieId
		, B.MOVIE_KOR_TITLE as movieKorTitle
		, B.MOVIE_ENG_TITLE as movieEngTitle
		, ifnull(CAST(C.CODE_D_NM as UNSIGNED)+sum(B.PRICE) , 0) as price
		, B.CRE_DT as creDt
		, B.REVIEW_SEQ as reviewSeq
		, B.CRE_ID
		, B.DISPLAY_YN
		from (		
			select
				A.MOVIE_ID
				, A.MOVIE_KOR_TITLE
				, A.MOVIE_ENG_TITLE
				, A.STD_PRICE_DIV
				, A.CRE_DT
				, A.REVIEW_SEQ
				, A.DISPLAY_YN
				, A.CRE_ID
				, case mp.PRICE_DIV when 'N' then mp.PRICE*-1 else mp.PRICE end PRICE
				, mp.PRICE_DIV
			from (	
				select
				mm.MOVIE_ID
				, mm.MOVIE_KOR_TITLE
				, mm.MOVIE_ENG_TITLE
				, mm.STD_PRICE_DIV
				, mm.CRE_DT
				, mr.REVIEW_SEQ
				, mr.CRE_ID
				, mm.DISPLAY_YN
				from MOVIE_MASTER mm , MOVIE_REVIEW mr
				where mm.MOVIE_ID = mr.MOVIE_ID
				and mr.WRITER_DIV = 'E') A left outer join MOVIE_PRICE mp
					on A.REVIEW_SEQ = mp.REVIEW_SEQ
					) B , CMM_CODE_D C
		where B.STD_PRICE_DIV = C.CODE_D_SEQ
		group by B.MOVIE_ID, B.MOVIE_KOR_TITLE;
	</select>
	
	<insert id="insertMoviePrice" parameterType="com.mymovieprice.mmp.movie.model.MoviePrice">
		insert into MOVIE_PRICE(
			REVIEW_SEQ, 
			PRICE_DIV,
			PRICE_COMMENT,
			PRICE,
			WRITER_DIV,
			CRE_ID,
			CRE_DT, 
			UPD_ID
			) VALUES (
			#{reviewSeq},
			#{priceDiv},
			#{priceComment},
			#{price},
			#{writerDiv},
			#{creId},
			NOW(),
			#{updId}
			);
	</insert>
	
	<insert id="insertMovieReview" parameterType="com.mymovieprice.mmp.movie.model.MovieReview">
		insert into MOVIE_REVIEW(
			MOVIE_ID, 
			USER_NO,
			REVIEW_TEXT,
			WRITER_DIV,
			IMAGE_SEQ , 
			CRE_ID,
			CRE_DT, 
			UPD_ID
			) VALUES (
			#{movieId},
			#{userNo},
			#{reviewText},
			#{writerDiv},
			(select IMAGE_SEQ from MOVIE_IMAGE mi where mi.MOVIE_ID = #{movieId} and mi.DELEGATE_YN = 'Y'),
			#{creId},
			NOW(),
			#{updId}
			);
	</insert>
	
	<select id="selectOneMoviePrice" parameterType="com.mymovieprice.mmp.movie.model.MoviePriceCondition" resultMap="MoviePriceList">
			select 
			MOVIE_PRICE_SEQ as moviePriceSeq,
			PRICE_COMMENT as priceComment,
			PRICE as price
			from MOVIE_PRICE
			where REVIEW_SEQ = #{reviewSeq}
			and PRICE_DIV = #{priceDiv}
			;
	</select>
</mapper>